1. Find the total revenue (price Ã— quantity) for each item, sorted from highest to lowest.

db.sales.aggregate([{$project:{item:1,revenue:{$multiply:["$price","$quantity"]}}},{$group:{_id:"$item",totalRevenue:{$sum:"$revenue"}}},{$sort:{totalRevenue:-1}}]);


2. Calculate the total quantity sold per month in 2022.

db.sales.aggregate([{$match:{$expr:{$eq:[{$year:"$date"},2022]}}},{$group:{_id:{$month:"$date"},totalQuantity:{$sum:"$quantity"}}},{$sort:{"_id":1}}]);


3. Find all items where price is greater than 10 and size is not 'Short'.

db.sales.find({price:{$gt:10},size:{$ne:"Short"}},{name:1,price:1,size:1})



4. Get all Cappuccino sales with quantity between 10 and 20.

db.sales.find({ item: "Cappuccino", quantity: { $gte: 10, $lte: 20 } })



5. Query to find items where the item name starts with "A".

db.sales.find({item:{$in:[/^A+/]}})



6. Find all records that do not have the field size.

db.sales.find({size:{$exists:false}},{item:1})



7. Find all sales that are either "Grande" or "Tall" but not "Americanos".

db.sales.find({$or:[{ size: "Grande" }, { size: "Tall" }], item: { $ne: "Americanos" }},{item:1,size:1})



8. List all items sold in February 2022.

db.sales.find({date:{$gte: ISODate("2022-02-01T00:00:00Z"), $lt: ISODate("2022-03-01T00:00:00Z")}})



9. Find sales where the quantity is more than twice the price.

db.sales.aggregate([{$match:{$expr:{$gt:["$quantity",{ $multiply:["$price",2]}]}}}])




10. Find all sales where the price is greater than the average price of their respective size.





11. Find Sales Where the Day of Week Matches Quantity's Last Digit.


db.sales.find({ $where: function(){const dayOfWeek = this.date; const lastDigit = this.quantity % 10; return dayOfWeek == lastDigit;}})




12. Find Sales Where the Month is Prime and Quantity is Odd.

db.sales.find({ $where: function() { return this.date.getDay() === this.quantity % 10; } })




13. Find Sales with "Suspicious Quantities" (Divisible by 5 or 7).

db.sales.find({ $where: function() { return this.quantity % 5 === 0 || this.quantity % 7 === 0;}})





 





